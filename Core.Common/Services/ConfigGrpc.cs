// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: config.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Core.Services {
  public static partial class Config
  {
    static readonly string __ServiceName = "core.proto.Config";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.GetSettingReq> __Marshaller_core_config_GetSettingReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.GetSettingReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.GetSettingRes> __Marshaller_core_config_GetSettingRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.GetSettingRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.SetSettingReq> __Marshaller_core_config_SetSettingReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.SetSettingReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.SetSettingRes> __Marshaller_core_config_SetSettingRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.SetSettingRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.GetUserConfigReq> __Marshaller_core_config_GetUserConfigReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.GetUserConfigReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.GetUserConfigRes> __Marshaller_core_config_GetUserConfigRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.GetUserConfigRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.ResetCacheReq> __Marshaller_core_config_ResetCacheReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.ResetCacheReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.ResetCacheRes> __Marshaller_core_config_ResetCacheRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.ResetCacheRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.GetGroupConfigReq> __Marshaller_core_config_GetGroupConfigReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.GetGroupConfigReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.GetGroupConfigRes> __Marshaller_core_config_GetGroupConfigRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.GetGroupConfigRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.SetGroupSettingReq> __Marshaller_core_config_SetGroupSettingReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.SetGroupSettingReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Core.Entities.SetGroupSettingRes> __Marshaller_core_config_SetGroupSettingRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Core.Entities.SetGroupSettingRes.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Core.Entities.GetSettingReq, global::Core.Entities.GetSettingRes> __Method_GetSetting = new grpc::Method<global::Core.Entities.GetSettingReq, global::Core.Entities.GetSettingRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSetting",
        __Marshaller_core_config_GetSettingReq,
        __Marshaller_core_config_GetSettingRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Core.Entities.SetSettingReq, global::Core.Entities.SetSettingRes> __Method_AddSetting = new grpc::Method<global::Core.Entities.SetSettingReq, global::Core.Entities.SetSettingRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSetting",
        __Marshaller_core_config_SetSettingReq,
        __Marshaller_core_config_SetSettingRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Core.Entities.GetUserConfigReq, global::Core.Entities.GetUserConfigRes> __Method_GetUserConfig = new grpc::Method<global::Core.Entities.GetUserConfigReq, global::Core.Entities.GetUserConfigRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserConfig",
        __Marshaller_core_config_GetUserConfigReq,
        __Marshaller_core_config_GetUserConfigRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Core.Entities.ResetCacheReq, global::Core.Entities.ResetCacheRes> __Method_ResetCache = new grpc::Method<global::Core.Entities.ResetCacheReq, global::Core.Entities.ResetCacheRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCache",
        __Marshaller_core_config_ResetCacheReq,
        __Marshaller_core_config_ResetCacheRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Core.Entities.GetGroupConfigReq, global::Core.Entities.GetGroupConfigRes> __Method_GetGroupConfig = new grpc::Method<global::Core.Entities.GetGroupConfigReq, global::Core.Entities.GetGroupConfigRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGroupConfig",
        __Marshaller_core_config_GetGroupConfigReq,
        __Marshaller_core_config_GetGroupConfigRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Core.Entities.SetGroupSettingReq, global::Core.Entities.SetGroupSettingRes> __Method_AddGroupSetting = new grpc::Method<global::Core.Entities.SetGroupSettingReq, global::Core.Entities.SetGroupSettingRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGroupSetting",
        __Marshaller_core_config_SetGroupSettingReq,
        __Marshaller_core_config_SetGroupSettingRes);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Core.Services.ConfigReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Config</summary>
    [grpc::BindServiceMethod(typeof(Config), "BindService")]
    public abstract partial class ConfigBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Core.Entities.GetSettingRes> GetSetting(global::Core.Entities.GetSettingReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Core.Entities.SetSettingRes> AddSetting(global::Core.Entities.SetSettingReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Core.Entities.GetUserConfigRes> GetUserConfig(global::Core.Entities.GetUserConfigReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Core.Entities.ResetCacheRes> ResetCache(global::Core.Entities.ResetCacheReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Core.Entities.GetGroupConfigRes> GetGroupConfig(global::Core.Entities.GetGroupConfigReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Core.Entities.SetGroupSettingRes> AddGroupSetting(global::Core.Entities.SetGroupSettingReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Config</summary>
    public partial class ConfigClient : grpc::ClientBase<ConfigClient>
    {
      /// <summary>Creates a new client for Config</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ConfigClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Config that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ConfigClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ConfigClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ConfigClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.GetSettingRes GetSetting(global::Core.Entities.GetSettingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSetting(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.GetSettingRes GetSetting(global::Core.Entities.GetSettingReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSetting, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.GetSettingRes> GetSettingAsync(global::Core.Entities.GetSettingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSettingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.GetSettingRes> GetSettingAsync(global::Core.Entities.GetSettingReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSetting, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.SetSettingRes AddSetting(global::Core.Entities.SetSettingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSetting(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.SetSettingRes AddSetting(global::Core.Entities.SetSettingReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSetting, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.SetSettingRes> AddSettingAsync(global::Core.Entities.SetSettingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSettingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.SetSettingRes> AddSettingAsync(global::Core.Entities.SetSettingReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSetting, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.GetUserConfigRes GetUserConfig(global::Core.Entities.GetUserConfigReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.GetUserConfigRes GetUserConfig(global::Core.Entities.GetUserConfigReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.GetUserConfigRes> GetUserConfigAsync(global::Core.Entities.GetUserConfigReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.GetUserConfigRes> GetUserConfigAsync(global::Core.Entities.GetUserConfigReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.ResetCacheRes ResetCache(global::Core.Entities.ResetCacheReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCache(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.ResetCacheRes ResetCache(global::Core.Entities.ResetCacheReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCache, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.ResetCacheRes> ResetCacheAsync(global::Core.Entities.ResetCacheReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCacheAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.ResetCacheRes> ResetCacheAsync(global::Core.Entities.ResetCacheReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCache, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.GetGroupConfigRes GetGroupConfig(global::Core.Entities.GetGroupConfigReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroupConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.GetGroupConfigRes GetGroupConfig(global::Core.Entities.GetGroupConfigReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGroupConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.GetGroupConfigRes> GetGroupConfigAsync(global::Core.Entities.GetGroupConfigReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroupConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.GetGroupConfigRes> GetGroupConfigAsync(global::Core.Entities.GetGroupConfigReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGroupConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.SetGroupSettingRes AddGroupSetting(global::Core.Entities.SetGroupSettingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGroupSetting(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Core.Entities.SetGroupSettingRes AddGroupSetting(global::Core.Entities.SetGroupSettingReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGroupSetting, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.SetGroupSettingRes> AddGroupSettingAsync(global::Core.Entities.SetGroupSettingReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGroupSettingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Core.Entities.SetGroupSettingRes> AddGroupSettingAsync(global::Core.Entities.SetGroupSettingReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGroupSetting, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ConfigClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ConfigClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ConfigBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetSetting, serviceImpl.GetSetting)
          .AddMethod(__Method_AddSetting, serviceImpl.AddSetting)
          .AddMethod(__Method_GetUserConfig, serviceImpl.GetUserConfig)
          .AddMethod(__Method_ResetCache, serviceImpl.ResetCache)
          .AddMethod(__Method_GetGroupConfig, serviceImpl.GetGroupConfig)
          .AddMethod(__Method_AddGroupSetting, serviceImpl.AddGroupSetting).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ConfigBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetSetting, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Core.Entities.GetSettingReq, global::Core.Entities.GetSettingRes>(serviceImpl.GetSetting));
      serviceBinder.AddMethod(__Method_AddSetting, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Core.Entities.SetSettingReq, global::Core.Entities.SetSettingRes>(serviceImpl.AddSetting));
      serviceBinder.AddMethod(__Method_GetUserConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Core.Entities.GetUserConfigReq, global::Core.Entities.GetUserConfigRes>(serviceImpl.GetUserConfig));
      serviceBinder.AddMethod(__Method_ResetCache, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Core.Entities.ResetCacheReq, global::Core.Entities.ResetCacheRes>(serviceImpl.ResetCache));
      serviceBinder.AddMethod(__Method_GetGroupConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Core.Entities.GetGroupConfigReq, global::Core.Entities.GetGroupConfigRes>(serviceImpl.GetGroupConfig));
      serviceBinder.AddMethod(__Method_AddGroupSetting, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Core.Entities.SetGroupSettingReq, global::Core.Entities.SetGroupSettingRes>(serviceImpl.AddGroupSetting));
    }

  }
}
#endregion
